---
// For some reason if i move "import {t} from 'i18next'" down it breaks
import {t} from 'i18next';
import {ChevronDownIcon} from 'astro-feather';
import { locales, translations } from '../lib/i18n';
import { defaultLocale } from '../constants';
---

<div class="relative inline-block text-left dropdown">
	<button class="flex column items-center gap-1 w-full justify-center mx-auto" aria-label={t('languages')}>
		<svg  width="14" height="14" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"> <path class="st0" d="M2,16c0.1,0,8-5,9-7c0.6-1.3,1-5,1-5h3H1h7V1"/> <line class="st0" x1="4" y1="8" x2="12" y2="16"/> <polygon class="st0" points="15,19 21,19 23,23 18,11 13,23 "/> </svg>
		<span>{translations.find(({lang_key}) => lang_key === Astro.currentLocale).lang_description}</span>
		<ChevronDownIcon size={16} class:list={'flex'}/>
	</button>
	<div class="bg-white p-2 border rounded hidden flex-col dropdown-menu sm:absolute sm:right-0 :smleft-auto gap-2">
		{translations.map(({lang_key, lang_description}) => <button
			class="language-button"
			data-lang={lang_key}
			>
				{lang_description}
			</button>)
		}
	</div>
</div>

<script define:vars={{ locales, defaultLocale, currentLocale: Astro.currentLocale }}>
	function changeLanguage(languageToChangeTo) {
		const url = window.location
		const onDefaultLanguage = currentLocale === defaultLocale
		const changingToDefaultLanguage = languageToChangeTo === defaultLocale

		if (!onDefaultLanguage && changingToDefaultLanguage) {
			url.pathname = url.pathname.split('/').slice(2).join('/')
		}

		if (onDefaultLanguage && !changingToDefaultLanguage) {
			url.pathname = [
				languageToChangeTo,
				url.pathname.split('/').slice(2).join('/'),
			].join('/')
		}
	}

	const languageButtons = document.querySelectorAll('button.language-button')

	languageButtons.forEach((languageButton) => {
		languageButton.addEventListener('click', () => {
			changeLanguage(languageButton.dataset.lang)
		});
	});
</script>

<style>
.dropdown:focus-within .dropdown-menu {
	display: flex;
}
</style>