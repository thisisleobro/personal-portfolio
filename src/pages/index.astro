---
import i18next, {t} from 'i18next'
import Backend from 'i18next-fs-backend'

// @ts-ignore
import path from 'node:path'

await i18next.use(Backend).init({
	fallbackLng: 'en',
	debug: true,
	lng: Astro.currentLocale,
	// preload: ['en', 'pt'],
	ns: ['translation'],
	defaultNS: 'translation',
	backend: {
		loadPath: path.join('.', 'locales/{{lng}}/{{ns}}.json')
	},
})

import profile from '../assets/profile.svg'

import {title} from '../constants'
import Analytics from '../components/Analytics.astro'

// return Astro.redirect('/en')
---

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<link rel="icon" type="image/svg+xml" href={profile.src} />
	<meta name="generator" content={Astro.generator} />
	<title>{title}</title>
	<meta name="description" content={t('description')}>
	<meta name="author" content="Leo Carvalho">	<Analytics />
	<script is:inline>
		const suportedLanguages = ['pt', 'en']

		const storedLocale = localStorage.getItem('locale')

		if (suportedLanguages.includes(storedLocale)) {
			window.location.pathname = storedLocale
		} else {
			const matchingLanguage = navigator.languages
				.map(language => language.slice(0, 2))
				.find((language) => suportedLanguages.includes(language))

			window.location.pathname = matchingLanguage? matchingLanguage: 'en'
		}
	</script>
</head>
<body>
	Redirecting to your language
</body>
</html>